
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DEFN IF LBRAC LCURLY LET LOOP LPAREN NUMBER OBSERVE RBRAC RCURLY RPAREN SAMPLE VARIABLEstatement : LPAREN DEFN VARIABLE LBRAC arguments RBRAC expression RPAREN statementstatement : expressionarguments : arguments VARIABLE\n                    | VARIABLEexpression : LPAREN IF expression expression expression RPARENvarexpre : varexpre VARIABLE expression\n                    | VARIABLE expressionexpression : LPAREN LET LBRAC varexpre RBRAC expression_list RPARENexpression : LBRAC expression_list RBRAC \n                        | LBRAC RBRACexpression : LPAREN LOOP NUMBER expression VARIABLE expression_list RPARENexpression : LPAREN VARIABLE expression_list RPARENexpression_list : expression_list expression \n                            | expressionexpression : LPAREN SAMPLE expression RPARENexpression : LPAREN OBSERVE expression expression RPARENexpression : NUMBERexpression : VARIABLE'
    
_lr_action_items = {'LPAREN':([0,3,4,6,8,9,12,13,14,15,16,19,20,22,24,25,26,28,29,31,33,38,39,41,42,44,45,46,48,50,51,52,],[2,-18,17,-17,17,17,17,17,17,-10,-14,17,17,17,17,-9,-13,-12,17,17,-15,17,17,17,-16,17,-5,17,17,-8,-11,2,]),'LBRAC':([0,3,4,6,8,9,10,12,13,14,15,16,18,19,20,22,24,25,26,28,29,31,33,38,39,41,42,44,45,46,48,50,51,52,],[4,-18,4,-17,4,4,21,4,4,4,-10,-14,27,4,4,4,4,-9,-13,-12,4,4,-15,4,4,4,-16,4,-5,4,4,-8,-11,4,]),'NUMBER':([0,3,4,6,8,9,11,12,13,14,15,16,19,20,22,24,25,26,28,29,31,33,38,39,41,42,44,45,46,48,50,51,52,],[6,-18,6,-17,6,6,22,6,6,6,-10,-14,6,6,6,6,-9,-13,-12,6,6,-15,6,6,6,-16,6,-5,6,6,-8,-11,6,]),'VARIABLE':([0,2,3,4,6,7,8,9,12,13,14,15,16,17,19,20,21,22,24,25,26,27,28,29,30,31,32,33,35,36,38,39,40,41,42,43,44,45,46,47,48,50,51,52,],[3,8,-18,3,-17,18,3,3,3,3,3,-10,-14,8,3,3,31,3,3,-9,-13,35,-12,3,39,3,41,-15,-4,43,3,3,-7,3,-16,-3,3,-5,3,-6,3,-8,-11,3,]),'$end':([1,3,5,6,15,25,28,33,42,45,50,51,53,],[0,-18,-2,-17,-10,-9,-12,-15,-16,-5,-8,-11,-1,]),'DEFN':([2,],[7,]),'IF':([2,17,],[9,9,]),'LET':([2,17,],[10,10,]),'LOOP':([2,17,],[11,11,]),'SAMPLE':([2,17,],[12,12,]),'OBSERVE':([2,17,],[13,13,]),'RBRAC':([3,4,6,14,15,16,25,26,28,30,33,35,36,40,42,43,45,47,50,51,],[-18,15,-17,25,-10,-14,-9,-13,-12,38,-15,-4,44,-7,-16,-3,-5,-6,-8,-11,]),'RPAREN':([3,6,15,16,19,23,25,26,28,33,34,37,42,45,46,48,49,50,51,],[-18,-17,-10,-14,28,33,-9,-13,-12,-15,42,45,-16,-5,50,51,52,-8,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,52,],[1,53,]),'expression':([0,4,8,9,12,13,14,19,20,22,24,29,31,38,39,41,44,46,48,52,],[5,16,16,20,23,24,26,26,29,32,34,37,40,16,47,16,49,26,26,5,]),'expression_list':([4,8,38,41,],[14,19,46,48,]),'varexpre':([21,],[30,]),'arguments':([27,],[36,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> LPAREN DEFN VARIABLE LBRAC arguments RBRAC expression RPAREN statement','statement',9,'p_statement_define','parser.py',8),
  ('statement -> expression','statement',1,'p_statement_expr','parser.py',17),
  ('arguments -> arguments VARIABLE','arguments',2,'p_arguments_expr','parser.py',21),
  ('arguments -> VARIABLE','arguments',1,'p_arguments_expr','parser.py',22),
  ('expression -> LPAREN IF expression expression expression RPAREN','expression',6,'p_expression_if','parser.py',31),
  ('varexpre -> varexpre VARIABLE expression','varexpre',3,'p_expression_varexp','parser.py',35),
  ('varexpre -> VARIABLE expression','varexpre',2,'p_expression_varexp','parser.py',36),
  ('expression -> LPAREN LET LBRAC varexpre RBRAC expression_list RPAREN','expression',7,'p_expression_letsugar','parser.py',45),
  ('expression -> LBRAC expression_list RBRAC','expression',3,'p_expression_vector','parser.py',58),
  ('expression -> LBRAC RBRAC','expression',2,'p_expression_vector','parser.py',59),
  ('expression -> LPAREN LOOP NUMBER expression VARIABLE expression_list RPAREN','expression',7,'p_expression_loop','parser.py',66),
  ('expression -> LPAREN VARIABLE expression_list RPAREN','expression',4,'p_expression_fcall','parser.py',70),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',77),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',78),
  ('expression -> LPAREN SAMPLE expression RPAREN','expression',4,'p_sample','parser.py',88),
  ('expression -> LPAREN OBSERVE expression expression RPAREN','expression',5,'p_observe','parser.py',92),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',96),
  ('expression -> VARIABLE','expression',1,'p_expression_variable','parser.py',100),
]
